apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
type: Opaque
stringData:  # We dont need to worry about converting to base64
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: password
  POSTGRES_DB: postgres   
---  
apiVersion: v1
kind: PersistentVolume                        # Create a PV
metadata:
  name: postgres-pv-volume
  labels:
    type: local
    app: k8s-postgres
spec:
  storageClassName: manual                    # Storage class. A PV Claim requesting the same storageClass can be bound to this volume.
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteMany
  hostPath:                                   # hostPath PersistentVolume is used for development and testing. It uses a file/directory on the Node to emulate network-attached storage
    path: "/mnt/data"
  persistentVolumeReclaimPolicy: Retain
---
apiVersion: v1
kind: PersistentVolumeClaim                   # Create a PersistentVolumeClaim to request a PersistentVolume storage
metadata:                                     # Claim name and labels
  name: postgres-pv-claim
  labels:
    app: k8s-postgres
spec:                                         # Access mode and resource limits
  storageClassName: manual                    # Request a certain storage class
  accessModes:
    - ReadWriteMany                           # ReadWriteMany means the volume can be mounted as read-write by many Nodes
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment                                # Type of the kubernetes resource
metadata:
  name: k8s-postgres                      # Name of the deployment
  labels:                                        # Labels applied to this deployment 
    app: k8s-postgres
spec:
  selector:
    matchLabels:                                  # This deployment applies to the Pods matching the specified labels
      app: k8s-postgres
      tier: postgres
  replicas: 1
  template:                                       # Template for the Pods in this deployment
    metadata:
      labels:                                     # Labels to be applied to the Pods in this deployment
        app: k8s-postgres
        tier: postgres
    spec:                                         # The spec for the containers that will be run inside the Pods in this deployment
      containers:
        - image: postgres:latest                  # The container image
          name: postgres
          imagePullPolicy: "IfNotPresent"
          envFrom:                                # Get the environmental variables from a secret file whose name is "postgres-secret" 
            - secretRef:
                name: postgres-secret
            
          ports:
            - containerPort: 5432                   # The port that the container exposes 
              name: postgres
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-persistent-storage     # This name should match the name specified in `volumes.name`
      volumes:                                      # A PersistentVolume is mounted as a volume to the Pod 
        - name: postgres-persistent-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim
---
apiVersion: v1                                      # API version
kind: Service                                       # Type of kubernetes resource 
metadata:
  name: k8s-postgres                          # Name of the resource
  labels:                                           # Labels that will be applied to the resource
    app: k8s-postgres
spec:
  type: NodePort
  ports:
    - port: 5432
  selector:                                         # Selects any Pod with labels `app=fullstack-postgres,tier=postgres`
    app: k8s-postgres
    tier: postgres